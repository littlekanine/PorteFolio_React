* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --index: calc(1vw + 1vh);
  --transition: cubic-bezier(0.1, 0.7, 0, 1);
}

.wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
}

.items {
  display: flex;
  gap: 0.4rem;
  perspective: calc(var(--index) * 35);

  .item {
    width: calc(var(--index) * 5);
    height: calc(var(--index) * 12);
    background-color: #222;
    background-size: cover;
    background-position: center;
    cursor: pointer;
    filter: grayscale(1) brightness(0.5);
    transition: transform 1.25s var(--transition), filter 3s var(--transition),
      width 1.25s var(--transition);
    will-change: transform, filter, rotateY, width;
    border-radius: 10px;

    &::before,
    &::after {
      content: "";
      position: absolute;
      height: 100%;
      width: 20px;
      right: calc(var(--index) * -1);
    }

    // &::after {
    //   left: calc(var(--index) * -1);
    // }

    &:hover {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 10));
    }

    &:active,
    &:focus {
      width: 28vw;
      filter: inherit;
      z-index: 100;
      transform: translateZ(calc(var(--index) * 10));
      margin: 0 0.45vw;
    }
  }

  .item + * {
    &:hover {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 8.5));
      z-index: -1;
    }

    &:hover + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 5.6));
      z-index: -2;
    }

    &:hover + * + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 2.5));
      z-index: -3;
    }

    &:hover + * + * + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 0.6));
      z-index: -4;
    }
  }

  .item {
    &:has(+ :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 8.5));
    }

    &:has(+ * + :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 5.6));
    }

    &:has(+ * + * + :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 2.5));
    }

    &:has(+ * + * + * + :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 0.6));
    }
  }
}
